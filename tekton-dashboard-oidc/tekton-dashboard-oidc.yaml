---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-dashboard-auth
  namespace: tekton-pipelines
  labels:
    app: tekton-dashboard-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tekton-dashboard-auth
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tekton-dashboard-auth
    spec:
      containers:
      - args:
        - --cookie-secure=false
        - --provider=oidc
        - --provider-display-name="AWS Cognito"
        - --upstream=http://tekton-dashboard:9097
        - --http-address=$(HOST_IP):8080
        - --redirect-url=https://YOUR_TEKTON_DASHBOARD_DOMAIN/oauth2/callback  # TODO: Add proper redirect URL
        - --email-domain=*
        - --pass-basic-auth=false
        - --pass-access-token=false
        - --oidc-issuer-url=https://cognito-idp.AWS_REGION.amazonaws.com/USER_POOL_ID # TODO: proper issuer url
        - --cookie-secret=SOME_COOKIE_SECRET # TODO: Generate some cookie secret
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: username
              name: tekton-dashboard-auth
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: password
              name: tekton-dashboard-auth
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.6.0
        imagePullPolicy: IfNotPresent
        name: oauth-proxy
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        securityContext:
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        ports:
        - containerPort: 8080
          protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    # Note that the backend talks over HTTP.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # TODO: Fill in with the ARN of your certificate.
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn of your certificate"
    # Only run SSL on the port named "https" below.
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
  labels:
    app: tekton-dashboard
  name: tekton-dashboard-auth
  namespace: tekton-pipelines
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8080
  selector:
    app: tekton-dashboard-auth
  sessionAffinity: None
